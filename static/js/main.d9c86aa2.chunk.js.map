{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","Response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAAe,I,kCCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAK,wBAAwBH,EAAMI,QAAQC,GAAG,cACjE,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCIXC,EAPS,SAACR,GAAD,OACpB,sBAAKC,UAAU,YAAf,UACID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAFvB,SCFSM,G,OAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCCG,E,kDA/Bb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTR,SAAU,GACVS,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAGvC,WAAU,IAAD,SACwBE,KAAKR,MAA7BR,EADA,EACAA,SAASS,EADT,EACSA,YACVQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAClD,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACGW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAE,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAUvB,SAAUiB,W,GA1BVO,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d9c86aa2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react from 'react';\r\nimport './card.style.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={'https://robohash.org/'+props.monster.id+'?set=set2'}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n) ","import React from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card.component'; \r\n\r\nexport const Cardlist = (props) =>(\r\n    <div className='card-list'>{\r\n        props.monsters.map(monster=>(\r\n        <Card key={monster.id} monster={monster}/>))\r\n      }  </div>\r\n);\r\n\r\nexport default Cardlist;","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input \r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    />\r\n)\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(Response=>Response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n\n  render() {\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n           placeholder='seacrh monsters'\n           handleChange={e=>this.setState({searchField: e.target.value})}\n        />\n        <CardList monsters={filteredMonsters}/>    \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}